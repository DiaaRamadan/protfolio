// transition mixin
@mixin ease-in-out($time) {
    
    @include prefix('transition', (webkit,o,moz), all #{$time} ease-in-out);
}

// control in the background display
@mixin background-control {
    @if $show-home-background-image{
        &#bg-img{
            background: $background-home-image;
            background-attachment: fixed;
            background-size: cover;
        }
    }
}

// overlay

@mixin overlay($color) {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($color, $background-opacity);
    z-index: -1;
}

// add prefixs to properties
@mixin prefix($prop, $prefixes, $value) {
    #{$prop}: $value;
    @each $prefix in $prefixes {
        #{'-' + $prefix + '-' + $prop}: #{$value}
    }
}

// media query for small diveces

@mixin mediaSm {
    @media screen and (max-width:500px){
        @content;
    }
}

// media query for medium diveces

@mixin mediaMed {
    @media screen and (max-width:768px){
        @content;
    }
}

// media query for large diveces

@mixin mediaLg {
    @media screen and (min-width:769px) and (max-width: 1170px){
        @content;
    }
}

// media query for large diveces

@mixin mediaXl {
    @media screen and (min-width:1171px){
        @content;
    }
}

@function set-text-color($color){
    @if (lightness($color) > 40) {
        @return #000;
    }
    @else{
        @return #fff;
    }
}